{"ast":null,"code":"var _jsxFileName = \"/home/gr00866046/Videos/e-store-front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport \"./SearchBar.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Routes, Route, redirect, Navigate } from \"react-router-dom\";\nimport Profile from \"./componenets/Profile\";\nimport ErrorPage from \"./componenets/ErrorPage\";\nimport Login from \"./componenets/Login\";\nimport Register from \"./componenets/Register\";\nimport ProductCards from \"./componenets/ProductCards\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { notifyLoggedIn, notifyLoggedOut, notifyLoginFailed } from \"./notification/Login\";\nimport Footer from \"./componenets/Footer\";\nimport AboutUs from \"./componenets/About\";\nimport Cart from \"./componenets/Cart\";\nimport { getCartItems } from \"./API/CartAPI\";\nimport { notifyRegistrationFailed, notifyRegistrationSuccess } from \"./notification/Registration\";\nimport MyOrders from \"./componenets/MyOrders\";\nimport { Base_URL } from \"./API/Base_URL\";\nimport Navigation from \"./componenets/Navigation\";\nimport { Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  //login\n  const [loginEmailOrPhone, setLoginEmailOrPhonesetEmail] = useState(\"\");\n  const [loginPwd, setLoginPwd] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userDetail, setUserDetails] = useState({});\n  const [loginFailedMsg, setLoginFailedMsg] = useState(\"\");\n  const [loginEmailOrPhoneError, setLoginEmailOrPhonesetEmailError] = useState(\"\");\n  const [loginPwdError, setLoginPwdError] = useState(\"\");\n  const [showLoginPwd, setShowLoginPwd] = useState(false);\n  //Registration\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [gender, setGender] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state1, setState1] = useState(\"\");\n  const [country, setCountry] = useState(\"India\");\n  const [pincode, setPincode] = useState(\"\");\n\n  //Search\n  const [searchProduct, setSearchProduct] = useState(\"\");\n  const [pathName, setPathName] = useState(\"\");\n  useEffect(() => {\n    if (searchProduct.length > 1) {\n      setPathName(\"/\");\n    } else {\n      setPathName(window.location.pathname);\n    }\n  });\n  const onSearchChange = e => {\n    e.preventDefault();\n    setSearchProduct(e.target.value);\n    //window.location.href = \"/\";\n  };\n  const [filteredProducts, setfilteredProducts] = useState(products);\n  const handleSearch = () => {\n    setTimeout(() => {\n      let filtered = products.filter(product => product.title.toLowerCase().includes(searchProduct.toLowerCase()));\n      setfilteredProducts(filtered);\n    }, 500);\n  };\n  useEffect(() => {\n    handleSearch();\n  });\n  const resetLoginForm = e => {\n    e.preventDefault();\n    setLoginEmailOrPhonesetEmailError(\"\");\n    setLoginPwdError(\"\");\n    setLoginEmailOrPhonesetEmail(\"\");\n    setLoginPwd(\"\");\n    setLoginFailedMsg(\"\");\n    setShowLoginPwd(\"\");\n  };\n  const hangleLogin = e => {\n    e.preventDefault();\n    var phoneNumber = 0;\n    var email1 = \"\";\n    if (loginEmailOrPhone === \"\" || loginPwd === \"\") {\n      if (loginEmailOrPhone === \"\") {\n        setLoginEmailOrPhonesetEmailError(\"Empty username!\");\n      } else {\n        setLoginEmailOrPhonesetEmailError(\"\");\n      }\n      if (loginPwd === \"\") {\n        setLoginPwdError(\"Empty password!\");\n      } else {\n        setLoginPwdError(\"\");\n      }\n    } else {\n      setLoginEmailOrPhonesetEmailError(\"\");\n      setLoginPwdError(\"\");\n      if (loginEmailOrPhone.toString().includes(\"@\")) {\n        email1 = loginEmailOrPhone;\n      } else {\n        phoneNumber = parseInt(loginEmailOrPhone);\n      }\n      axios.post(`${Base_URL}/login`, {\n        username: loginEmailOrPhone,\n        password: loginPwd\n      }).then(response => {\n        if (response.status === 200) {\n          setLoginFailedMsg(\"Login successful, please close this pop-up\");\n          setIsAuthenticated(true);\n          // setUserId(response.data.user.userId);\n          sessionStorage.setItem(\"email\", response.data.credentials.email);\n          sessionStorage.setItem(\"phone\", response.data.credentials.phoneNumber);\n          sessionStorage.setItem(\"user_id\", response.data.user.userId);\n          sessionStorage.setItem(\"pwd\", response.data.credentials.pwd);\n          setUserDetails(response.data);\n          resetLoginForm(e);\n          notifyLoggedIn();\n        }\n      }).catch(error => {\n        notifyLoginFailed();\n        if (error.message.includes(\"401\")) {\n          setLoginFailedMsg(\"Incorrect username or password !\");\n        } else {\n          setLoginFailedMsg(\"Network error !\");\n        }\n        setIsAuthenticated(false);\n      });\n    }\n  };\n  const [cartItems, setCartItems] = useState([]);\n  const handleLogout = e => {\n    e.preventDefault();\n    sessionStorage.clear();\n    setTimeout(() => {\n      setIsAuthenticated(false);\n      setLoginFailedMsg(\"\");\n    }, 500);\n    notifyLoggedOut();\n  };\n  const [pwdMissMatch, setPwdMissmatch] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [dobError, setDobError] = useState(\"\");\n  const [pwdError, setPwdError] = useState(\"\");\n  const [confirmPwdError, setConfirmPwdError] = useState(\"\");\n  const [areaError, setAreaError] = useState(\"\");\n  const [cityError, setCityError] = useState(\"\");\n  const [state1Error, setState1Error] = useState(\"\");\n  const [countryError, setCountryError] = useState(\"\");\n  const [pincodeError, setPincodeError] = useState(\"\");\n\n  //cart\n  // const [userId, setUserId] = useState();\n\n  const clearRegistrationForm = e => {\n    e.preventDefault();\n    setGender(\"Male\");\n    setDobError(\"\");\n    setDob(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    setPwd(\"\");\n    setConfirmPwd(\"\");\n    setArea(\"\");\n    setCity(\"\");\n    setState1(\"Andaman and Nicobar Islands\");\n    setCountry(\"India\");\n    setPincode(\"\");\n    setPwdMissmatch(\"\");\n    setEmailError(\"\");\n    setPhoneError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setPwdError(\"\");\n    setConfirmPwdError(\"\");\n    setAreaError(\"\");\n    setCityError(\"\");\n    setState1Error(\"\");\n    setCountryError(\"\");\n    setPincodeError(\"\");\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    if (firstName === \"\" || lastName === \"\" || email === \"\" || pwd === \"\" || confirmPwd === \"\" || phoneNo === \"\" || area === \"\" || city === \"\" || state1 === \"\" || country === \"\" || pincode === \"\" || dob === \"\") {\n      if (pwd !== confirmPwd) {\n        setPwdMissmatch(\"Password doesn't match!\");\n      } else {\n        setPwdMissmatch(\"\");\n      }\n      if (dob === \"\") {\n        setDobError(\"Please select date of birth!\");\n      } else {\n        setDobError(\"\");\n      }\n      let pwdRegex = \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}\";\n      if (!pwd.match(pwdRegex)) {\n        setPwdError(\"Password contains at least 8 characters including at least one upper case letter, one lower case letter,one special symbol(@#$%^&+=) and one number!\");\n      } else {\n        setPwdError(\"\");\n      }\n      if (confirmPwd === \"\") {\n        setConfirmPwdError(\"Empty Confirm password!\");\n      } else {\n        setConfirmPwdError(\"\");\n      }\n      let regexp = \"^[A-Za-z]{1,29}$\";\n      if (!firstName.match(regexp)) {\n        setFirstNameError(\"Please include only alphabets ranging from 1 to 29 characters!\");\n      } else {\n        setFirstNameError(\"\");\n      }\n      if (!lastName.match(regexp)) {\n        setLastNameError(\"Please include only alphabets ranging from 1 to 29 characters!\");\n      } else {\n        setLastNameError(\"\");\n      }\n      let emailRegex = \"[a-z0-9_%+-]+@[a-z0-9]+.[a-z]{2,3}$\";\n      if (!email.match(emailRegex)) {\n        setEmailError(\"Please enter valid email!\");\n      } else {\n        setEmailError(\"\");\n      }\n      let phoneRegex = \"^[0-9]{10}$\";\n      if (!phoneNo.match(phoneRegex)) {\n        setPhoneError(\"Please ensure 10 digit number!\");\n      } else {\n        setPhoneError(\"\");\n      }\n      if (area === \"\") {\n        setAreaError(\"Empty area!\");\n      } else {\n        setAreaError(\"\");\n      }\n      if (city === \"\") {\n        setCityError(\"Empty city!\");\n      } else {\n        setCityError(\"\");\n      }\n      if (state1 === \"\") {\n        setState1Error(\"Empty state!\");\n      } else {\n        setState1Error(\"\");\n      }\n      if (country === \"\") {\n        setCountryError(\"Empty country!\");\n      } else {\n        setCountryError(\"\");\n      }\n      let pincodeRegex = \"^[0-9]{6}$\";\n      if (!pincode.match(pincodeRegex)) {\n        setPincodeError(\"Please ensure 6 digit pincode!\");\n      } else {\n        setPincodeError(\"\");\n      }\n    } else {\n      setFirstNameError(\"\");\n      setLastNameError(\"\");\n      setPwdError(\"\");\n      setConfirmPwdError(\"\");\n      setAreaError(\"\");\n      setPhoneError(\"\");\n      setCityError(\"\");\n      setState1Error(\"\");\n      setCountryError(\"\");\n      setPincodeError(\"\");\n      setEmailError(\"\");\n      let newUser = {\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          gender: gender,\n          dateOfBirth: new Date(dob).toLocaleDateString()\n        },\n        credentials: {\n          email: email,\n          phoneNumber: parseInt(phoneNo + \"l\"),\n          pwd: pwd\n        },\n        address: {\n          area: area,\n          city: city,\n          state: state1,\n          country: country,\n          pinCode: parseInt(pincode + \"l\")\n        }\n      };\n      axios.post(`${Base_URL}/register`, newUser).then(response => {\n        if (typeof response.data === typeof \"\") {\n          if (response.data.includes(\"Email and Phone\")) {\n            setEmailError(\"Email already exists!\");\n            setPhoneError(\"Phone Number already exists!\");\n          } else {\n            setEmailError(\"\");\n            setPhoneError(\"\");\n            response.data === \"Email already exists!\" ? setEmailError(\"Email already exists!\") : setEmailError(\"\");\n            response.data === \"Phone Number already exists!\" ? setPhoneError(\"Phone Number already exists!\") : setPhoneError(\"\");\n          }\n        }\n        if (typeof response.data === typeof {}) {\n          setIsRegistrationSuccess(true);\n          setTimeout(() => {\n            setIsRegistrationSuccess(false);\n          }, 10000);\n          notifyRegistrationSuccess();\n          clearRegistrationForm(e);\n        } else {\n          setIsRegistrationSuccess(false);\n          notifyLoginFailed();\n        }\n        setUserDetails(response.data);\n      }).catch(error => {\n        setIsRegistrationSuccess(false);\n        notifyRegistrationFailed();\n      });\n    }\n  };\n  const [productsLoadMsg, setProductsLoadMsg] = useState(\"\");\n  const handleLogin = () => {\n    if (sessionStorage.getItem(\"pwd\") != null) {\n      let uname = sessionStorage.getItem(\"email\") === \"\" ? sessionStorage.getItem(\"phone\") : sessionStorage.getItem(\"email\");\n      if (uname != \"\") {\n        let upwd = sessionStorage.getItem(\"pwd\");\n        axios.post(`${Base_URL}/login`, {\n          username: uname,\n          password: upwd\n        }).then(response => {\n          if (response.status === 200) {\n            setLoginFailedMsg(\"Login successful, please close this pop-up\");\n            setIsAuthenticated(true);\n            setUserDetails(response.data);\n            redirect(\"/\");\n          }\n        }).catch(error => {\n          if (error.message.includes(\"401\")) {\n            setLoginFailedMsg(\"Incorrect username or password !\");\n          } else {\n            setLoginFailedMsg(\"Network error !\");\n          }\n          setIsAuthenticated(false);\n        });\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n  };\n  const [healthStatus, setHealthStatus] = useState();\n  const getApplicationHealth = () => {\n    axios.get(`${Base_URL}/actuator/health`).then(response => {\n      setHealthStatus(response.data.status);\n      console.log(\"health:\", response.data.status);\n    }).catch(error => console.error(error));\n  };\n  const getProducts = () => {\n    axios.get(`${Base_URL}/products`).then(response => {\n      setProducts(response.data);\n      if (response.data.length === 0) {\n        setProductsLoadMsg(\"Products not available!\");\n      }\n    }).catch(error => {\n      setProductsLoadMsg(`Server Error ! : ${error.message}`);\n    });\n  };\n  useEffect(() => {\n    handleLogin();\n    getCartItems(setCartItems);\n    getProducts();\n    getApplicationHealth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Navigation, {\n          isAuthenticated: isAuthenticated,\n          searchProduct: searchProduct,\n          onSearchChange: onSearchChange,\n          handleSearch: handleSearch,\n          userDetail: userDetail,\n          cartItems: cartItems,\n          handleLogout: handleLogout,\n          filteredProducts: filteredProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), isAuthenticated && userDetail.user.role === \"ADMIN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-center mt-3 pt-5 boxShadow ${healthStatus === \"UP\" ? \"text-success\" : \"text-danger\"}`,\n        children: [\"Application Health Status : \", healthStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-3 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          className: \"text-dark\",\n          children: \"Login Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: products && products.length > 0 ? /*#__PURE__*/_jsxDEV(ProductCards, {\n            products: products,\n            searchInput: searchProduct,\n            userDetail: userDetail,\n            setCartItems: setCartItems,\n            isAuthenticated: isAuthenticated,\n            cartItems: cartItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Profile, {\n            userDetail: userDetail,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(ErrorPage, {\n            filteredProducts: filteredProducts,\n            msg: productsLoadMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about-us\",\n          element: /*#__PURE__*/_jsxDEV(AboutUs, {\n            msg: productsLoadMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Cart, {\n            isAuthenticated: isAuthenticated,\n            userDetails: userDetail,\n            setCartItems1: setCartItems,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            hangleLogin: hangleLogin,\n            loginEmailOrPhoneError: loginEmailOrPhoneError,\n            loginEmailOrPhone: loginEmailOrPhone,\n            setLoginEmailOrPhonesetEmail: setLoginEmailOrPhonesetEmail,\n            loginPwdError: loginPwdError,\n            showLoginPwd: showLoginPwd,\n            loginPwd: loginPwd,\n            setLoginPwd: setLoginPwd,\n            setShowLoginPwd: setShowLoginPwd,\n            isAuthenticated: isAuthenticated,\n            loginFailedMsg: loginFailedMsg,\n            resetLoginForm: resetLoginForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            gender: gender,\n            setGender: setGender,\n            firstNameError: firstNameError,\n            firstName: firstName,\n            setFirstName: setFirstName,\n            lastNameError: lastNameError,\n            lastName: lastName,\n            setLastName: setLastName,\n            dob: dob,\n            setDob: setDob,\n            emailError: emailError,\n            email: email,\n            setEmail: setEmail,\n            phoneError: phoneError,\n            phoneNo: phoneNo,\n            setPhoneNo: setPhoneNo,\n            pwdError: pwdError,\n            pwd: pwd,\n            setPwd: setPwd,\n            confirmPwdError: confirmPwdError,\n            pwdMissMatch: pwdMissMatch,\n            confirmPwd: confirmPwd,\n            setConfirmPwd: setConfirmPwd,\n            areaError: areaError,\n            area: area,\n            setArea: setArea,\n            cityError: cityError,\n            city: city,\n            setCity: setCity,\n            state1Error: state1Error,\n            state1: state1,\n            setState1: setState1,\n            countryError: countryError,\n            country: country,\n            setCountry: setCountry,\n            pincodeError: pincodeError,\n            pincode: pincode,\n            setPincode: setPincode,\n            isRegistrationSuccess: isRegistrationSuccess,\n            clearRegistrationForm: clearRegistrationForm,\n            dobError: dobError,\n            showLoginPwd: showLoginPwd,\n            setShowLoginPwd: setShowLoginPwd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/orders\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(MyOrders, {\n            userId: sessionStorage.getItem(\"user_id\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7+6ghRQ8YXszM3ioG/nOMhCW2Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","BrowserRouter","Router","Routes","Route","redirect","Navigate","Profile","ErrorPage","Login","Register","ProductCards","ToastContainer","notifyLoggedIn","notifyLoggedOut","notifyLoginFailed","Footer","AboutUs","Cart","getCartItems","notifyRegistrationFailed","notifyRegistrationSuccess","MyOrders","Base_URL","Navigation","Alert","jsxDEV","_jsxDEV","App","_s","products","setProducts","loginEmailOrPhone","setLoginEmailOrPhonesetEmail","loginPwd","setLoginPwd","isAuthenticated","setIsAuthenticated","userDetail","setUserDetails","loginFailedMsg","setLoginFailedMsg","loginEmailOrPhoneError","setLoginEmailOrPhonesetEmailError","loginPwdError","setLoginPwdError","showLoginPwd","setShowLoginPwd","isRegistrationSuccess","setIsRegistrationSuccess","gender","setGender","dob","setDob","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNo","setPhoneNo","pwd","setPwd","confirmPwd","setConfirmPwd","area","setArea","city","setCity","state1","setState1","country","setCountry","pincode","setPincode","searchProduct","setSearchProduct","pathName","setPathName","length","window","location","pathname","onSearchChange","e","preventDefault","target","value","filteredProducts","setfilteredProducts","handleSearch","setTimeout","filtered","filter","product","title","toLowerCase","includes","resetLoginForm","hangleLogin","phoneNumber","email1","toString","parseInt","post","username","password","then","response","status","sessionStorage","setItem","data","credentials","user","userId","catch","error","message","cartItems","setCartItems","handleLogout","clear","pwdMissMatch","setPwdMissmatch","emailError","setEmailError","phoneError","setPhoneError","firstNameError","setFirstNameError","lastNameError","setLastNameError","dobError","setDobError","pwdError","setPwdError","confirmPwdError","setConfirmPwdError","areaError","setAreaError","cityError","setCityError","state1Error","setState1Error","countryError","setCountryError","pincodeError","setPincodeError","clearRegistrationForm","handleRegister","pwdRegex","match","regexp","emailRegex","phoneRegex","pincodeRegex","newUser","dateOfBirth","Date","toLocaleDateString","address","state","pinCode","productsLoadMsg","setProductsLoadMsg","handleLogin","getItem","uname","upwd","healthStatus","setHealthStatus","getApplicationHealth","get","console","log","getProducts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","role","severity","path","element","searchInput","to","msg","userDetails","setCartItems1","_c","$RefreshReg$"],"sources":["/home/gr00866046/Videos/e-store-front-end/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport \"./SearchBar.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  redirect,\n  Navigate,\n} from \"react-router-dom\";\nimport Profile from \"./componenets/Profile\";\nimport ErrorPage from \"./componenets/ErrorPage\";\nimport Login from \"./componenets/Login\";\nimport Register from \"./componenets/Register\";\nimport ProductCards from \"./componenets/ProductCards\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  notifyLoggedIn,\n  notifyLoggedOut,\n  notifyLoginFailed,\n} from \"./notification/Login\";\nimport Footer from \"./componenets/Footer\";\nimport AboutUs from \"./componenets/About\";\nimport Cart from \"./componenets/Cart\";\nimport { getCartItems } from \"./API/CartAPI\";\n\nimport {\n  notifyRegistrationFailed,\n  notifyRegistrationSuccess,\n} from \"./notification/Registration\";\nimport MyOrders from \"./componenets/MyOrders\";\nimport { Base_URL } from \"./API/Base_URL\";\nimport Navigation from \"./componenets/Navigation\";\nimport { Alert } from \"@mui/material\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n\n  //login\n  const [loginEmailOrPhone, setLoginEmailOrPhonesetEmail] = useState(\"\");\n  const [loginPwd, setLoginPwd] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userDetail, setUserDetails] = useState({});\n  const [loginFailedMsg, setLoginFailedMsg] = useState(\"\");\n  const [loginEmailOrPhoneError, setLoginEmailOrPhonesetEmailError] =\n    useState(\"\");\n  const [loginPwdError, setLoginPwdError] = useState(\"\");\n\n  const [showLoginPwd, setShowLoginPwd] = useState(false);\n  //Registration\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [gender, setGender] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state1, setState1] = useState(\"\");\n  const [country, setCountry] = useState(\"India\");\n  const [pincode, setPincode] = useState(\"\");\n\n  //Search\n  const [searchProduct, setSearchProduct] = useState(\"\");\n  const [pathName, setPathName] = useState(\"\");\n\n  useEffect(() => {\n    if (searchProduct.length > 1) {\n      setPathName(\"/\");\n    } else {\n      setPathName(window.location.pathname);\n    }\n  });\n\n  const onSearchChange = (e) => {\n    e.preventDefault();\n    setSearchProduct(e.target.value);\n    //window.location.href = \"/\";\n  };\n\n  const [filteredProducts, setfilteredProducts] = useState(products);\n\n  const handleSearch = () => {\n    setTimeout(() => {\n      let filtered = products.filter((product) =>\n        product.title.toLowerCase().includes(searchProduct.toLowerCase())\n      );\n      setfilteredProducts(filtered);\n    }, 500);\n  };\n\n  useEffect(() => {\n    handleSearch();\n  });\n\n  const resetLoginForm = (e) => {\n    e.preventDefault();\n    setLoginEmailOrPhonesetEmailError(\"\");\n    setLoginPwdError(\"\");\n    setLoginEmailOrPhonesetEmail(\"\");\n    setLoginPwd(\"\");\n    setLoginFailedMsg(\"\");\n    setShowLoginPwd(\"\");\n  };\n\n  const hangleLogin = (e) => {\n    e.preventDefault();\n    var phoneNumber = 0;\n    var email1 = \"\";\n    if (loginEmailOrPhone === \"\" || loginPwd === \"\") {\n      if (loginEmailOrPhone === \"\") {\n        setLoginEmailOrPhonesetEmailError(\"Empty username!\");\n      } else {\n        setLoginEmailOrPhonesetEmailError(\"\");\n      }\n      if (loginPwd === \"\") {\n        setLoginPwdError(\"Empty password!\");\n      } else {\n        setLoginPwdError(\"\");\n      }\n    } else {\n      setLoginEmailOrPhonesetEmailError(\"\");\n      setLoginPwdError(\"\");\n\n      if (loginEmailOrPhone.toString().includes(\"@\")) {\n        email1 = loginEmailOrPhone;\n      } else {\n        phoneNumber = parseInt(loginEmailOrPhone);\n      }\n      axios\n        .post(`${Base_URL}/login`, {\n          username: loginEmailOrPhone,\n          password: loginPwd,\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            setLoginFailedMsg(\"Login successful, please close this pop-up\");\n            setIsAuthenticated(true);\n            // setUserId(response.data.user.userId);\n            sessionStorage.setItem(\"email\", response.data.credentials.email);\n            sessionStorage.setItem(\n              \"phone\",\n              response.data.credentials.phoneNumber\n            );\n            sessionStorage.setItem(\"user_id\", response.data.user.userId);\n            sessionStorage.setItem(\"pwd\", response.data.credentials.pwd);\n            setUserDetails(response.data);\n            resetLoginForm(e);\n            notifyLoggedIn();\n          }\n        })\n        .catch((error) => {\n          notifyLoginFailed();\n          if (error.message.includes(\"401\")) {\n            setLoginFailedMsg(\"Incorrect username or password !\");\n          } else {\n            setLoginFailedMsg(\"Network error !\");\n          }\n\n          setIsAuthenticated(false);\n        });\n    }\n  };\n\n  const [cartItems, setCartItems] = useState([]);\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    sessionStorage.clear();\n\n    setTimeout(() => {\n      setIsAuthenticated(false);\n      setLoginFailedMsg(\"\");\n    }, 500);\n    notifyLoggedOut();\n  };\n\n  const [pwdMissMatch, setPwdMissmatch] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [dobError, setDobError] = useState(\"\");\n  const [pwdError, setPwdError] = useState(\"\");\n  const [confirmPwdError, setConfirmPwdError] = useState(\"\");\n  const [areaError, setAreaError] = useState(\"\");\n  const [cityError, setCityError] = useState(\"\");\n  const [state1Error, setState1Error] = useState(\"\");\n  const [countryError, setCountryError] = useState(\"\");\n  const [pincodeError, setPincodeError] = useState(\"\");\n\n  //cart\n  // const [userId, setUserId] = useState();\n\n  const clearRegistrationForm = (e) => {\n    e.preventDefault();\n    setGender(\"Male\");\n    setDobError(\"\");\n    setDob(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    setPwd(\"\");\n    setConfirmPwd(\"\");\n    setArea(\"\");\n    setCity(\"\");\n    setState1(\"Andaman and Nicobar Islands\");\n    setCountry(\"India\");\n    setPincode(\"\");\n    setPwdMissmatch(\"\");\n    setEmailError(\"\");\n    setPhoneError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setPwdError(\"\");\n    setConfirmPwdError(\"\");\n    setAreaError(\"\");\n    setCityError(\"\");\n    setState1Error(\"\");\n    setCountryError(\"\");\n    setPincodeError(\"\");\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (\n      firstName === \"\" ||\n      lastName === \"\" ||\n      email === \"\" ||\n      pwd === \"\" ||\n      confirmPwd === \"\" ||\n      phoneNo === \"\" ||\n      area === \"\" ||\n      city === \"\" ||\n      state1 === \"\" ||\n      country === \"\" ||\n      pincode === \"\" ||\n      dob === \"\"\n    ) {\n      if (pwd !== confirmPwd) {\n        setPwdMissmatch(\"Password doesn't match!\");\n      } else {\n        setPwdMissmatch(\"\");\n      }\n\n      if (dob === \"\") {\n        setDobError(\"Please select date of birth!\");\n      } else {\n        setDobError(\"\");\n      }\n\n      let pwdRegex =\n        \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}\";\n      if (!pwd.match(pwdRegex)) {\n        setPwdError(\n          \"Password contains at least 8 characters including at least one upper case letter, one lower case letter,one special symbol(@#$%^&+=) and one number!\"\n        );\n      } else {\n        setPwdError(\"\");\n      }\n\n      if (confirmPwd === \"\") {\n        setConfirmPwdError(\"Empty Confirm password!\");\n      } else {\n        setConfirmPwdError(\"\");\n      }\n\n      let regexp = \"^[A-Za-z]{1,29}$\";\n      if (!firstName.match(regexp)) {\n        setFirstNameError(\n          \"Please include only alphabets ranging from 1 to 29 characters!\"\n        );\n      } else {\n        setFirstNameError(\"\");\n      }\n\n      if (!lastName.match(regexp)) {\n        setLastNameError(\n          \"Please include only alphabets ranging from 1 to 29 characters!\"\n        );\n      } else {\n        setLastNameError(\"\");\n      }\n\n      let emailRegex = \"[a-z0-9_%+-]+@[a-z0-9]+.[a-z]{2,3}$\";\n      if (!email.match(emailRegex)) {\n        setEmailError(\"Please enter valid email!\");\n      } else {\n        setEmailError(\"\");\n      }\n\n      let phoneRegex = \"^[0-9]{10}$\";\n      if (!phoneNo.match(phoneRegex)) {\n        setPhoneError(\"Please ensure 10 digit number!\");\n      } else {\n        setPhoneError(\"\");\n      }\n\n      if (area === \"\") {\n        setAreaError(\"Empty area!\");\n      } else {\n        setAreaError(\"\");\n      }\n      if (city === \"\") {\n        setCityError(\"Empty city!\");\n      } else {\n        setCityError(\"\");\n      }\n      if (state1 === \"\") {\n        setState1Error(\"Empty state!\");\n      } else {\n        setState1Error(\"\");\n      }\n      if (country === \"\") {\n        setCountryError(\"Empty country!\");\n      } else {\n        setCountryError(\"\");\n      }\n\n      let pincodeRegex = \"^[0-9]{6}$\";\n      if (!pincode.match(pincodeRegex)) {\n        setPincodeError(\"Please ensure 6 digit pincode!\");\n      } else {\n        setPincodeError(\"\");\n      }\n    } else {\n      setFirstNameError(\"\");\n      setLastNameError(\"\");\n      setPwdError(\"\");\n      setConfirmPwdError(\"\");\n      setAreaError(\"\");\n      setPhoneError(\"\");\n      setCityError(\"\");\n      setState1Error(\"\");\n      setCountryError(\"\");\n      setPincodeError(\"\");\n      setEmailError(\"\");\n\n      let newUser = {\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          gender: gender,\n          dateOfBirth: new Date(dob).toLocaleDateString(),\n        },\n        credentials: {\n          email: email,\n          phoneNumber: parseInt(phoneNo + \"l\"),\n          pwd: pwd,\n        },\n        address: {\n          area: area,\n          city: city,\n          state: state1,\n          country: country,\n          pinCode: parseInt(pincode + \"l\"),\n        },\n      };\n\n      axios\n        .post(`${Base_URL}/register`, newUser)\n        .then((response) => {\n          if (typeof response.data === typeof \"\") {\n            if (response.data.includes(\"Email and Phone\")) {\n              setEmailError(\"Email already exists!\");\n              setPhoneError(\"Phone Number already exists!\");\n            } else {\n              setEmailError(\"\");\n              setPhoneError(\"\");\n\n              response.data === \"Email already exists!\"\n                ? setEmailError(\"Email already exists!\")\n                : setEmailError(\"\");\n\n              response.data === \"Phone Number already exists!\"\n                ? setPhoneError(\"Phone Number already exists!\")\n                : setPhoneError(\"\");\n            }\n          }\n          if (typeof response.data === typeof {}) {\n            setIsRegistrationSuccess(true);\n            setTimeout(() => {\n              setIsRegistrationSuccess(false);\n            }, 10000);\n            notifyRegistrationSuccess();\n            clearRegistrationForm(e);\n          } else {\n            setIsRegistrationSuccess(false);\n            notifyLoginFailed();\n          }\n          setUserDetails(response.data);\n        })\n        .catch((error) => {\n          setIsRegistrationSuccess(false);\n          notifyRegistrationFailed();\n        });\n    }\n  };\n\n  const [productsLoadMsg, setProductsLoadMsg] = useState(\"\");\n\n  const handleLogin = () => {\n    if (sessionStorage.getItem(\"pwd\") != null) {\n      let uname =\n        sessionStorage.getItem(\"email\") === \"\"\n          ? sessionStorage.getItem(\"phone\")\n          : sessionStorage.getItem(\"email\");\n      if (uname != \"\") {\n        let upwd = sessionStorage.getItem(\"pwd\");\n        axios\n          .post(`${Base_URL}/login`, {\n            username: uname,\n            password: upwd,\n          })\n          .then((response) => {\n            if (response.status === 200) {\n              setLoginFailedMsg(\"Login successful, please close this pop-up\");\n              setIsAuthenticated(true);\n              setUserDetails(response.data);\n              redirect(\"/\");\n            }\n          })\n          .catch((error) => {\n            if (error.message.includes(\"401\")) {\n              setLoginFailedMsg(\"Incorrect username or password !\");\n            } else {\n              setLoginFailedMsg(\"Network error !\");\n            }\n            setIsAuthenticated(false);\n          });\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n  };\n\n  const [healthStatus, setHealthStatus] = useState();\n\n  const getApplicationHealth = () => {\n    axios\n      .get(`${Base_URL}/actuator/health`)\n      .then((response) => {\n        setHealthStatus(response.data.status);\n        console.log(\"health:\", response.data.status);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const getProducts = () => {\n    axios\n      .get(`${Base_URL}/products`)\n      .then((response) => {\n        setProducts(response.data);\n        if (response.data.length === 0) {\n          setProductsLoadMsg(\"Products not available!\");\n        }\n      })\n      .catch((error) => {\n        setProductsLoadMsg(`Server Error ! : ${error.message}`);\n      });\n  };\n  useEffect(() => {\n    handleLogin();\n    getCartItems(setCartItems);\n    getProducts();\n    getApplicationHealth();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"\">\n        <ToastContainer />\n        <div className=\"\">\n          <Navigation\n            isAuthenticated={isAuthenticated}\n            searchProduct={searchProduct}\n            onSearchChange={onSearchChange}\n            handleSearch={handleSearch}\n            userDetail={userDetail}\n            cartItems={cartItems}\n            handleLogout={handleLogout}\n            filteredProducts={filteredProducts}\n          />\n        </div>\n\n        {isAuthenticated && userDetail.user.role === \"ADMIN\" && (\n          <div\n            className={`text-center mt-3 pt-5 boxShadow ${\n              healthStatus === \"UP\" ? \"text-success\" : \"text-danger\"\n            }`}\n          >\n            Application Health Status : {healthStatus}\n          </div>\n        )}\n\n        <div className=\"pt-3 mt-3\">\n          <Alert severity=\"success\" className=\"text-dark\">\n            Login Success\n          </Alert>\n        </div>\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              products && products.length > 0 ? (\n                <ProductCards\n                  products={products}\n                  searchInput={searchProduct}\n                  userDetail={userDetail}\n                  setCartItems={setCartItems}\n                  isAuthenticated={isAuthenticated}\n                  cartItems={cartItems}\n                />\n              ) : (\n                <ErrorPage />\n              )\n            }\n          />\n          <Route\n            path=\"/profile\"\n            element={\n              isAuthenticated ? (\n                <Profile userDetail={userDetail} handleLogin={handleLogin} />\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route\n            path=\"/*\"\n            element={\n              <ErrorPage\n                filteredProducts={filteredProducts}\n                msg={productsLoadMsg}\n              />\n            }\n          />\n          <Route path=\"/about-us\" element={<AboutUs msg={productsLoadMsg} />} />\n          <Route\n            path=\"/cart\"\n            element={\n              !isAuthenticated ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <Cart\n                  isAuthenticated={isAuthenticated}\n                  userDetails={userDetail}\n                  setCartItems1={setCartItems}\n                  handleLogin={handleLogin}\n                />\n              )\n            }\n          />\n\n          <Route\n            path=\"/login\"\n            element={\n              isAuthenticated ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <Login\n                  hangleLogin={hangleLogin}\n                  loginEmailOrPhoneError={loginEmailOrPhoneError}\n                  loginEmailOrPhone={loginEmailOrPhone}\n                  setLoginEmailOrPhonesetEmail={setLoginEmailOrPhonesetEmail}\n                  loginPwdError={loginPwdError}\n                  showLoginPwd={showLoginPwd}\n                  loginPwd={loginPwd}\n                  setLoginPwd={setLoginPwd}\n                  setShowLoginPwd={setShowLoginPwd}\n                  isAuthenticated={isAuthenticated}\n                  loginFailedMsg={loginFailedMsg}\n                  resetLoginForm={resetLoginForm}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register\n                handleRegister={handleRegister}\n                gender={gender}\n                setGender={setGender}\n                firstNameError={firstNameError}\n                firstName={firstName}\n                setFirstName={setFirstName}\n                lastNameError={lastNameError}\n                lastName={lastName}\n                setLastName={setLastName}\n                dob={dob}\n                setDob={setDob}\n                emailError={emailError}\n                email={email}\n                setEmail={setEmail}\n                phoneError={phoneError}\n                phoneNo={phoneNo}\n                setPhoneNo={setPhoneNo}\n                pwdError={pwdError}\n                pwd={pwd}\n                setPwd={setPwd}\n                confirmPwdError={confirmPwdError}\n                pwdMissMatch={pwdMissMatch}\n                confirmPwd={confirmPwd}\n                setConfirmPwd={setConfirmPwd}\n                areaError={areaError}\n                area={area}\n                setArea={setArea}\n                cityError={cityError}\n                city={city}\n                setCity={setCity}\n                state1Error={state1Error}\n                state1={state1}\n                setState1={setState1}\n                countryError={countryError}\n                country={country}\n                setCountry={setCountry}\n                pincodeError={pincodeError}\n                pincode={pincode}\n                setPincode={setPincode}\n                isRegistrationSuccess={isRegistrationSuccess}\n                clearRegistrationForm={clearRegistrationForm}\n                dobError={dobError}\n                showLoginPwd={showLoginPwd}\n                setShowLoginPwd={setShowLoginPwd}\n              />\n            }\n          />\n          <Route\n            path=\"/orders\"\n            element={\n              !isAuthenticated ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <MyOrders userId={sessionStorage.getItem(\"user_id\")} />\n              )\n            }\n          />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}