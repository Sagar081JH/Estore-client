{"ast":null,"code":"var _jsxFileName = \"/home/gr00866046/Videos/e-store-front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Routes, Route, Link, redirect, Navigate } from \"react-router-dom\";\nimport Profile from \"./componenets/Profile\";\nimport HomePage from \"./componenets/ProductCards\";\nimport ErrorPage from \"./componenets/ErrorPage\";\nimport Login from \"./componenets/Login\";\nimport Register from \"./componenets/Register\";\nimport ProductCard from \"./componenets/ProductCards\";\nimport ProductCards from \"./componenets/ProductCards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Flip } from \"react-toastify\";\nimport { notifyLoggedIn, notifyLoggedOut, notifyLoginFailed } from \"./notification/Login\";\nimport Footer from \"./componenets/Footer\";\nimport AboutUs from \"./componenets/About\";\nimport LogoutIcon from \"./componenets/LogoutIcon\";\nimport CartIcon from \"./componenets/CartIcon\";\nimport Cart from \"./componenets/Cart\";\nimport { getCartItems } from \"./API/CartAPI\";\nimport OrderConfirmation from \"./componenets/OrderConfirmation\";\nimport { notifyRegistrationFailed, notifyRegistrationSuccess } from \"./notification/Registration\";\nimport MyOrders from \"./componenets/MyOrders\";\nimport AddProduct from \"./componenets/AddProduct\";\nimport { Base_URL } from \"./API/Base_URL\";\nimport Navigation from \"./componenets/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  //login\n  const [loginEmailOrPhone, setLoginEmailOrPhonesetEmail] = useState(\"\");\n  const [loginPwd, setLoginPwd] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userDetail, setUserDetails] = useState({});\n  const [loginFailedMsg, setLoginFailedMsg] = useState(\"\");\n  const [loginEmailOrPhoneError, setLoginEmailOrPhonesetEmailError] = useState(\"\");\n  const [loginPwdError, setLoginPwdError] = useState(\"\");\n  const [showLoginPwd, setShowLoginPwd] = useState(false);\n\n  //session\n  const [sessionItems, setSessionItems] = useState({\n    username: \"\",\n    pwd: \"\"\n  });\n\n  //Registration\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [gender, setGender] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state1, setState1] = useState(\"\");\n  const [country, setCountry] = useState(\"India\");\n  const [pincode, setPincode] = useState(\"\");\n\n  //Search\n  const [searchProduct, setSearchProduct] = useState(\"\");\n  const [pathName, setPathName] = useState(\"\");\n  useEffect(() => {\n    if (searchProduct.length > 1) {\n      setPathName(\"/\");\n    } else {\n      setPathName(window.location.pathname);\n    }\n  });\n  const onSearchChange = e => {\n    e.preventDefault();\n    setSearchProduct(e.target.value);\n    //window.location.href = \"/\";\n  };\n  const [filteredProducts, setfilteredProducts] = useState(products);\n  const handleSearch = () => {\n    setTimeout(() => {\n      let filtered = products.filter(product => product.title.toLowerCase().includes(searchProduct.toLowerCase()));\n      setfilteredProducts(filtered);\n    }, 500);\n  };\n  useEffect(() => {\n    handleSearch();\n  });\n  const resetLoginForm = e => {\n    e.preventDefault();\n    setLoginEmailOrPhonesetEmailError(\"\");\n    setLoginPwdError(\"\");\n    setLoginEmailOrPhonesetEmail(\"\");\n    setLoginPwd(\"\");\n    setLoginFailedMsg(\"\");\n    setShowLoginPwd(\"\");\n  };\n  const hangleLogin = e => {\n    e.preventDefault();\n    var phoneNumber = 0;\n    var email1 = \"\";\n    if (loginEmailOrPhone == \"\" || loginPwd == \"\") {\n      if (loginEmailOrPhone == \"\") {\n        setLoginEmailOrPhonesetEmailError(\"Empty username!\");\n      } else {\n        setLoginEmailOrPhonesetEmailError(\"\");\n      }\n      if (loginPwd == \"\") {\n        setLoginPwdError(\"Empty password!\");\n      } else {\n        setLoginPwdError(\"\");\n      }\n    } else {\n      setLoginEmailOrPhonesetEmailError(\"\");\n      setLoginPwdError(\"\");\n      if (loginEmailOrPhone.toString().includes(\"@\")) {\n        email1 = loginEmailOrPhone;\n      } else {\n        phoneNumber = parseInt(loginEmailOrPhone);\n      }\n      axios.post(`${Base_URL}/login`, {\n        username: loginEmailOrPhone,\n        password: loginPwd\n      }).then(response => {\n        if (response.status == 200) {\n          setLoginFailedMsg(\"Login successful, please close this pop-up\");\n          setIsAuthenticated(true);\n          // setUserId(response.data.user.userId);\n          sessionStorage.setItem(\"email\", response.data.credentials.email);\n          sessionStorage.setItem(\"phone\", response.data.credentials.phoneNumber);\n          sessionStorage.setItem(\"user_id\", response.data.user.userId);\n          sessionStorage.setItem(\"pwd\", response.data.credentials.pwd);\n          setUserDetails(response.data);\n          resetLoginForm(e);\n          notifyLoggedIn();\n        }\n      }).catch(error => {\n        notifyLoginFailed();\n        if (error.message.includes(\"401\")) {\n          setLoginFailedMsg(\"Incorrect username or password !\");\n        } else {\n          setLoginFailedMsg(\"Network error !\");\n        }\n        setIsAuthenticated(false);\n      });\n    }\n  };\n  const [cartItems, setCartItems] = useState([]);\n  const handleLogout = e => {\n    e.preventDefault();\n    sessionStorage.clear();\n    setTimeout(() => {\n      setIsAuthenticated(false);\n      setLoginFailedMsg(\"\");\n    }, 500);\n    notifyLoggedOut();\n  };\n  const [pwdMissMatch, setPwdMissmatch] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [dobError, setDobError] = useState(\"\");\n  const [pwdError, setPwdError] = useState(\"\");\n  const [confirmPwdError, setConfirmPwdError] = useState(\"\");\n  const [areaError, setAreaError] = useState(\"\");\n  const [cityError, setCityError] = useState(\"\");\n  const [state1Error, setState1Error] = useState(\"\");\n  const [countryError, setCountryError] = useState(\"\");\n  const [pincodeError, setPincodeError] = useState(\"\");\n\n  //cart\n  // const [userId, setUserId] = useState();\n\n  const clearRegistrationForm = e => {\n    e.preventDefault();\n    setGender(\"Male\");\n    setDobError(\"\");\n    setDob(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    setPwd(\"\");\n    setConfirmPwd(\"\");\n    setArea(\"\");\n    setCity(\"\");\n    setState1(\"Andaman and Nicobar Islands\");\n    setCountry(\"India\");\n    setPincode(\"\");\n    setPwdMissmatch(\"\");\n    setEmailError(\"\");\n    setPhoneError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setPwdError(\"\");\n    setConfirmPwdError(\"\");\n    setAreaError(\"\");\n    setCityError(\"\");\n    setState1Error(\"\");\n    setCountryError(\"\");\n    setPincodeError(\"\");\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    if (firstName == \"\" || lastName == \"\" || email == \"\" || pwd == \"\" || confirmPwd == \"\" || phoneNo == \"\" || area == \"\" || city == \"\" || state1 == \"\" || country == \"\" || pincode == \"\" || dob == \"\") {\n      if (pwd !== confirmPwd) {\n        setPwdMissmatch(\"Password doesn't match!\");\n      } else {\n        setPwdMissmatch(\"\");\n      }\n      if (dob == \"\") {\n        setDobError(\"Please select date of birth!\");\n      } else {\n        setDobError(\"\");\n      }\n      let pwdRegex = \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}\";\n      if (!pwd.match(pwdRegex)) {\n        setPwdError(\"Password contains at least 8 characters including at least one upper case letter, one lower case letter,one special symbol(@#$%^&+=) and one number!\");\n      } else {\n        setPwdError(\"\");\n      }\n      if (confirmPwd == \"\") {\n        setConfirmPwdError(\"Empty Confirm password!\");\n      } else {\n        setConfirmPwdError(\"\");\n      }\n      let regexp = \"^[A-Za-z]{1,29}$\";\n      if (!firstName.match(regexp)) {\n        setFirstNameError(\"Please include only alphabets ranging from 1 to 29 characters!\");\n      } else {\n        setFirstNameError(\"\");\n      }\n      if (!lastName.match(regexp)) {\n        setLastNameError(\"Please include only alphabets ranging from 1 to 29 characters!\");\n      } else {\n        setLastNameError(\"\");\n      }\n      let emailRegex = \"[a-z0-9_%+-]+@[a-z0-9]+.[a-z]{2,3}$\";\n      if (!email.match(emailRegex)) {\n        setEmailError(\"Please enter valid email!\");\n      } else {\n        setEmailError(\"\");\n      }\n      let phoneRegex = \"^[0-9]{10}$\";\n      if (!phoneNo.match(phoneRegex)) {\n        setPhoneError(\"Please ensure 10 digit number!\");\n      } else {\n        setPhoneError(\"\");\n      }\n      if (area == \"\") {\n        setAreaError(\"Empty area!\");\n      } else {\n        setAreaError(\"\");\n      }\n      if (city == \"\") {\n        setCityError(\"Empty city!\");\n      } else {\n        setCityError(\"\");\n      }\n      if (state1 == \"\") {\n        setState1Error(\"Empty state!\");\n      } else {\n        setState1Error(\"\");\n      }\n      if (country == \"\") {\n        setCountryError(\"Empty country!\");\n      } else {\n        setCountryError(\"\");\n      }\n      let pincodeRegex = \"^[0-9]{6}$\";\n      if (!pincode.match(pincodeRegex)) {\n        setPincodeError(\"Please ensure 6 digit pincode!\");\n      } else {\n        setPincodeError(\"\");\n      }\n    } else {\n      setFirstNameError(\"\");\n      setLastNameError(\"\");\n      setPwdError(\"\");\n      setConfirmPwdError(\"\");\n      setAreaError(\"\");\n      setPhoneError(\"\");\n      setCityError(\"\");\n      setState1Error(\"\");\n      setCountryError(\"\");\n      setPincodeError(\"\");\n      setEmailError(\"\");\n      let newUser = {\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          gender: gender,\n          dateOfBirth: new Date(dob).toLocaleDateString()\n        },\n        credentials: {\n          email: email,\n          phoneNumber: parseInt(phoneNo + \"l\"),\n          pwd: pwd\n        },\n        address: {\n          area: area,\n          city: city,\n          state: state1,\n          country: country,\n          pinCode: parseInt(pincode + \"l\")\n        }\n      };\n      axios.post(`${Base_URL}/register`, newUser).then(response => {\n        if (typeof response.data == typeof \"\") {\n          if (response.data.includes(\"Email and Phone\")) {\n            setEmailError(\"Email already exists!\");\n            setPhoneError(\"Phone Number already exists!\");\n          } else {\n            setEmailError(\"\");\n            setPhoneError(\"\");\n            response.data == \"Email already exists!\" ? setEmailError(\"Email already exists!\") : setEmailError(\"\");\n            response.data == \"Phone Number already exists!\" ? setPhoneError(\"Phone Number already exists!\") : setPhoneError(\"\");\n          }\n        }\n        if (typeof response.data == typeof {}) {\n          setIsRegistrationSuccess(true);\n          setTimeout(() => {\n            setIsRegistrationSuccess(false);\n          }, 10000);\n          notifyRegistrationSuccess();\n          clearRegistrationForm(e);\n        } else {\n          setIsRegistrationSuccess(false);\n          notifyLoginFailed();\n        }\n        setUserDetails(response.data);\n      }).catch(error => {\n        setIsRegistrationSuccess(false);\n        notifyRegistrationFailed();\n      });\n    }\n  };\n  const [productsLoadMsg, setProductsLoadMsg] = useState(\"\");\n  const handleLogin = () => {\n    if (sessionStorage.getItem(\"pwd\") != null) {\n      let uname = sessionStorage.getItem(\"email\") == \"\" ? sessionStorage.getItem(\"phone\") : sessionStorage.getItem(\"email\");\n      if (uname != \"\") {\n        let upwd = sessionStorage.getItem(\"pwd\");\n        axios.post(`${Base_URL}/login`, {\n          username: uname,\n          password: upwd\n        }).then(response => {\n          if (response.status == 200) {\n            setLoginFailedMsg(\"Login successful, please close this pop-up\");\n            setIsAuthenticated(true);\n            setUserDetails(response.data);\n            redirect(\"/\");\n          }\n        }).catch(error => {\n          if (error.message.includes(\"401\")) {\n            setLoginFailedMsg(\"Incorrect username or password !\");\n          } else {\n            setLoginFailedMsg(\"Network error !\");\n          }\n          setIsAuthenticated(false);\n        });\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n  };\n  const [healthStatus, setHealthStatus] = useState();\n  const getApplicationHealth = () => {\n    axios.get(`${Base_URL}/actuator/health`).then(response => {\n      setHealthStatus(response.data.status);\n      console.log(\"health:\", response.data.status);\n    }).catch(error => console.error(error));\n  };\n  const getProducts = () => {\n    axios.get(`${Base_URL}/products`).then(response => {\n      setProducts(response.data);\n      if (response.data.length === 0) {\n        setProductsLoadMsg(\"Products not available!\");\n      }\n    }).catch(error => {\n      setProductsLoadMsg(`Server Error ! : ${error.message}`);\n    });\n  };\n  useEffect(() => {\n    handleLogin();\n    getCartItems(setCartItems);\n    getProducts();\n    getApplicationHealth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: products && products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          isAuthenticated: isAuthenticated,\n          searchProduct: searchProduct,\n          onSearchChange: onSearchChange,\n          handleSearch: handleSearch,\n          userDetail: userDetail,\n          cartItems: cartItems,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          children: \"sdsddddddd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          children: \"sdsddddddd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          children: \"sdsddddddd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          children: \"sdsddddddd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), isAuthenticated && userDetail.user.role === \"ADMIN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-center mt-2 ${healthStatus === \"UP\" ? \"text-success\" : \"text-danger\"}`,\n        children: [\"Application Health Status : \", healthStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProductCards, {\n            products: filteredProducts,\n            searchInput: searchProduct,\n            userDetail: userDetail,\n            setCartItems: setCartItems,\n            isAuthenticated: isAuthenticated,\n            pathName: pathName,\n            searchProduct: searchProduct,\n            onSearchChange: onSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Profile, {\n            userDetail: userDetail,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(ErrorPage, {\n            filteredProducts: filteredProducts,\n            msg: productsLoadMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about-us\",\n          element: /*#__PURE__*/_jsxDEV(AboutUs, {\n            msg: productsLoadMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Cart, {\n            isAuthenticated: isAuthenticated,\n            userDetails: userDetail,\n            setCartItems1: setCartItems,\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/order-confirmation\",\n          element: /*#__PURE__*/_jsxDEV(OrderConfirmation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            hangleLogin: hangleLogin,\n            loginEmailOrPhoneError: loginEmailOrPhoneError,\n            loginEmailOrPhone: loginEmailOrPhone,\n            setLoginEmailOrPhonesetEmail: setLoginEmailOrPhonesetEmail,\n            loginPwdError: loginPwdError,\n            showLoginPwd: showLoginPwd,\n            loginPwd: loginPwd,\n            setLoginPwd: setLoginPwd,\n            setShowLoginPwd: setShowLoginPwd,\n            isAuthenticated: isAuthenticated,\n            loginFailedMsg: loginFailedMsg,\n            resetLoginForm: resetLoginForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            gender: gender,\n            setGender: setGender,\n            firstNameError: firstNameError,\n            firstName: firstName,\n            setFirstName: setFirstName,\n            lastNameError: lastNameError,\n            lastName: lastName,\n            setLastName: setLastName,\n            dob: dob,\n            setDob: setDob,\n            emailError: emailError,\n            email: email,\n            setEmail: setEmail,\n            phoneError: phoneError,\n            phoneNo: phoneNo,\n            setPhoneNo: setPhoneNo,\n            pwdError: pwdError,\n            pwd: pwd,\n            setPwd: setPwd,\n            confirmPwdError: confirmPwdError,\n            pwdMissMatch: pwdMissMatch,\n            confirmPwd: confirmPwd,\n            setConfirmPwd: setConfirmPwd,\n            areaError: areaError,\n            area: area,\n            setArea: setArea,\n            cityError: cityError,\n            city: city,\n            setCity: setCity,\n            state1Error: state1Error,\n            state1: state1,\n            setState1: setState1,\n            countryError: countryError,\n            country: country,\n            setCountry: setCountry,\n            pincodeError: pincodeError,\n            pincode: pincode,\n            setPincode: setPincode,\n            isRegistrationSuccess: isRegistrationSuccess,\n            clearRegistrationForm: clearRegistrationForm,\n            dobError: dobError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/orders\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(MyOrders, {\n            userId: sessionStorage.getItem(\"user_id\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lHvIiwJ6Qk1IzRyeJqTfSvze2Qg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","BrowserRouter","Router","Routes","Route","Link","redirect","Navigate","Profile","HomePage","ErrorPage","Login","Register","ProductCard","ProductCards","ToastContainer","toast","Flip","notifyLoggedIn","notifyLoggedOut","notifyLoginFailed","Footer","AboutUs","LogoutIcon","CartIcon","Cart","getCartItems","OrderConfirmation","notifyRegistrationFailed","notifyRegistrationSuccess","MyOrders","AddProduct","Base_URL","Navigation","jsxDEV","_jsxDEV","App","_s","products","setProducts","loginEmailOrPhone","setLoginEmailOrPhonesetEmail","loginPwd","setLoginPwd","isAuthenticated","setIsAuthenticated","userDetail","setUserDetails","loginFailedMsg","setLoginFailedMsg","loginEmailOrPhoneError","setLoginEmailOrPhonesetEmailError","loginPwdError","setLoginPwdError","showLoginPwd","setShowLoginPwd","sessionItems","setSessionItems","username","pwd","isRegistrationSuccess","setIsRegistrationSuccess","gender","setGender","dob","setDob","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNo","setPhoneNo","setPwd","confirmPwd","setConfirmPwd","area","setArea","city","setCity","state1","setState1","country","setCountry","pincode","setPincode","searchProduct","setSearchProduct","pathName","setPathName","length","window","location","pathname","onSearchChange","e","preventDefault","target","value","filteredProducts","setfilteredProducts","handleSearch","setTimeout","filtered","filter","product","title","toLowerCase","includes","resetLoginForm","hangleLogin","phoneNumber","email1","toString","parseInt","post","password","then","response","status","sessionStorage","setItem","data","credentials","user","userId","catch","error","message","cartItems","setCartItems","handleLogout","clear","pwdMissMatch","setPwdMissmatch","emailError","setEmailError","phoneError","setPhoneError","firstNameError","setFirstNameError","lastNameError","setLastNameError","dobError","setDobError","pwdError","setPwdError","confirmPwdError","setConfirmPwdError","areaError","setAreaError","cityError","setCityError","state1Error","setState1Error","countryError","setCountryError","pincodeError","setPincodeError","clearRegistrationForm","handleRegister","pwdRegex","match","regexp","emailRegex","phoneRegex","pincodeRegex","newUser","dateOfBirth","Date","toLocaleDateString","address","state","pinCode","productsLoadMsg","setProductsLoadMsg","handleLogin","getItem","uname","upwd","healthStatus","setHealthStatus","getApplicationHealth","get","console","log","getProducts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","role","path","element","searchInput","to","msg","userDetails","setCartItems1","_c","$RefreshReg$"],"sources":["/home/gr00866046/Videos/e-store-front-end/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  redirect,\n  Navigate,\n} from \"react-router-dom\";\nimport Profile from \"./componenets/Profile\";\nimport HomePage from \"./componenets/ProductCards\";\nimport ErrorPage from \"./componenets/ErrorPage\";\nimport Login from \"./componenets/Login\";\nimport Register from \"./componenets/Register\";\nimport ProductCard from \"./componenets/ProductCards\";\nimport ProductCards from \"./componenets/ProductCards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Flip } from \"react-toastify\";\nimport {\n  notifyLoggedIn,\n  notifyLoggedOut,\n  notifyLoginFailed,\n} from \"./notification/Login\";\nimport Footer from \"./componenets/Footer\";\nimport AboutUs from \"./componenets/About\";\nimport LogoutIcon from \"./componenets/LogoutIcon\";\nimport CartIcon from \"./componenets/CartIcon\";\nimport Cart from \"./componenets/Cart\";\nimport { getCartItems } from \"./API/CartAPI\";\nimport OrderConfirmation from \"./componenets/OrderConfirmation\";\nimport {\n  notifyRegistrationFailed,\n  notifyRegistrationSuccess,\n} from \"./notification/Registration\";\nimport MyOrders from \"./componenets/MyOrders\";\nimport AddProduct from \"./componenets/AddProduct\";\nimport { Base_URL } from \"./API/Base_URL\";\nimport Navigation from \"./componenets/Navigation\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n\n  //login\n  const [loginEmailOrPhone, setLoginEmailOrPhonesetEmail] = useState(\"\");\n  const [loginPwd, setLoginPwd] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userDetail, setUserDetails] = useState({});\n  const [loginFailedMsg, setLoginFailedMsg] = useState(\"\");\n  const [loginEmailOrPhoneError, setLoginEmailOrPhonesetEmailError] =\n    useState(\"\");\n  const [loginPwdError, setLoginPwdError] = useState(\"\");\n\n  const [showLoginPwd, setShowLoginPwd] = useState(false);\n\n  //session\n  const [sessionItems, setSessionItems] = useState({\n    username: \"\",\n    pwd: \"\",\n  });\n\n  //Registration\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [gender, setGender] = useState(\"Male\");\n  const [dob, setDob] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [confirmPwd, setConfirmPwd] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state1, setState1] = useState(\"\");\n  const [country, setCountry] = useState(\"India\");\n  const [pincode, setPincode] = useState(\"\");\n\n  //Search\n  const [searchProduct, setSearchProduct] = useState(\"\");\n  const [pathName, setPathName] = useState(\"\");\n\n  useEffect(() => {\n    if (searchProduct.length > 1) {\n      setPathName(\"/\");\n    } else {\n      setPathName(window.location.pathname);\n    }\n  });\n\n  const onSearchChange = (e) => {\n    e.preventDefault();\n    setSearchProduct(e.target.value);\n    //window.location.href = \"/\";\n  };\n\n  const [filteredProducts, setfilteredProducts] = useState(products);\n\n  const handleSearch = () => {\n    setTimeout(() => {\n      let filtered = products.filter((product) =>\n        product.title.toLowerCase().includes(searchProduct.toLowerCase())\n      );\n      setfilteredProducts(filtered);\n    }, 500);\n  };\n\n  useEffect(() => {\n    handleSearch();\n  });\n\n  const resetLoginForm = (e) => {\n    e.preventDefault();\n    setLoginEmailOrPhonesetEmailError(\"\");\n    setLoginPwdError(\"\");\n    setLoginEmailOrPhonesetEmail(\"\");\n    setLoginPwd(\"\");\n    setLoginFailedMsg(\"\");\n    setShowLoginPwd(\"\");\n  };\n\n  const hangleLogin = (e) => {\n    e.preventDefault();\n    var phoneNumber = 0;\n    var email1 = \"\";\n    if (loginEmailOrPhone == \"\" || loginPwd == \"\") {\n      if (loginEmailOrPhone == \"\") {\n        setLoginEmailOrPhonesetEmailError(\"Empty username!\");\n      } else {\n        setLoginEmailOrPhonesetEmailError(\"\");\n      }\n      if (loginPwd == \"\") {\n        setLoginPwdError(\"Empty password!\");\n      } else {\n        setLoginPwdError(\"\");\n      }\n    } else {\n      setLoginEmailOrPhonesetEmailError(\"\");\n      setLoginPwdError(\"\");\n\n      if (loginEmailOrPhone.toString().includes(\"@\")) {\n        email1 = loginEmailOrPhone;\n      } else {\n        phoneNumber = parseInt(loginEmailOrPhone);\n      }\n      axios\n        .post(`${Base_URL}/login`, {\n          username: loginEmailOrPhone,\n          password: loginPwd,\n        })\n        .then((response) => {\n          if (response.status == 200) {\n            setLoginFailedMsg(\"Login successful, please close this pop-up\");\n            setIsAuthenticated(true);\n            // setUserId(response.data.user.userId);\n            sessionStorage.setItem(\"email\", response.data.credentials.email);\n            sessionStorage.setItem(\n              \"phone\",\n              response.data.credentials.phoneNumber\n            );\n            sessionStorage.setItem(\"user_id\", response.data.user.userId);\n            sessionStorage.setItem(\"pwd\", response.data.credentials.pwd);\n            setUserDetails(response.data);\n            resetLoginForm(e);\n            notifyLoggedIn();\n          }\n        })\n        .catch((error) => {\n          notifyLoginFailed();\n          if (error.message.includes(\"401\")) {\n            setLoginFailedMsg(\"Incorrect username or password !\");\n          } else {\n            setLoginFailedMsg(\"Network error !\");\n          }\n\n          setIsAuthenticated(false);\n        });\n    }\n  };\n\n  const [cartItems, setCartItems] = useState([]);\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    sessionStorage.clear();\n\n    setTimeout(() => {\n      setIsAuthenticated(false);\n      setLoginFailedMsg(\"\");\n    }, 500);\n    notifyLoggedOut();\n  };\n\n  const [pwdMissMatch, setPwdMissmatch] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [dobError, setDobError] = useState(\"\");\n  const [pwdError, setPwdError] = useState(\"\");\n  const [confirmPwdError, setConfirmPwdError] = useState(\"\");\n  const [areaError, setAreaError] = useState(\"\");\n  const [cityError, setCityError] = useState(\"\");\n  const [state1Error, setState1Error] = useState(\"\");\n  const [countryError, setCountryError] = useState(\"\");\n  const [pincodeError, setPincodeError] = useState(\"\");\n\n  //cart\n  // const [userId, setUserId] = useState();\n\n  const clearRegistrationForm = (e) => {\n    e.preventDefault();\n    setGender(\"Male\");\n    setDobError(\"\");\n    setDob(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPhoneNo(\"\");\n    setPwd(\"\");\n    setConfirmPwd(\"\");\n    setArea(\"\");\n    setCity(\"\");\n    setState1(\"Andaman and Nicobar Islands\");\n    setCountry(\"India\");\n    setPincode(\"\");\n    setPwdMissmatch(\"\");\n    setEmailError(\"\");\n    setPhoneError(\"\");\n    setFirstNameError(\"\");\n    setLastNameError(\"\");\n    setPwdError(\"\");\n    setConfirmPwdError(\"\");\n    setAreaError(\"\");\n    setCityError(\"\");\n    setState1Error(\"\");\n    setCountryError(\"\");\n    setPincodeError(\"\");\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (\n      firstName == \"\" ||\n      lastName == \"\" ||\n      email == \"\" ||\n      pwd == \"\" ||\n      confirmPwd == \"\" ||\n      phoneNo == \"\" ||\n      area == \"\" ||\n      city == \"\" ||\n      state1 == \"\" ||\n      country == \"\" ||\n      pincode == \"\" ||\n      dob == \"\"\n    ) {\n      if (pwd !== confirmPwd) {\n        setPwdMissmatch(\"Password doesn't match!\");\n      } else {\n        setPwdMissmatch(\"\");\n      }\n\n      if (dob == \"\") {\n        setDobError(\"Please select date of birth!\");\n      } else {\n        setDobError(\"\");\n      }\n\n      let pwdRegex =\n        \"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}\";\n      if (!pwd.match(pwdRegex)) {\n        setPwdError(\n          \"Password contains at least 8 characters including at least one upper case letter, one lower case letter,one special symbol(@#$%^&+=) and one number!\"\n        );\n      } else {\n        setPwdError(\"\");\n      }\n\n      if (confirmPwd == \"\") {\n        setConfirmPwdError(\"Empty Confirm password!\");\n      } else {\n        setConfirmPwdError(\"\");\n      }\n\n      let regexp = \"^[A-Za-z]{1,29}$\";\n      if (!firstName.match(regexp)) {\n        setFirstNameError(\n          \"Please include only alphabets ranging from 1 to 29 characters!\"\n        );\n      } else {\n        setFirstNameError(\"\");\n      }\n\n      if (!lastName.match(regexp)) {\n        setLastNameError(\n          \"Please include only alphabets ranging from 1 to 29 characters!\"\n        );\n      } else {\n        setLastNameError(\"\");\n      }\n\n      let emailRegex = \"[a-z0-9_%+-]+@[a-z0-9]+.[a-z]{2,3}$\";\n      if (!email.match(emailRegex)) {\n        setEmailError(\"Please enter valid email!\");\n      } else {\n        setEmailError(\"\");\n      }\n\n      let phoneRegex = \"^[0-9]{10}$\";\n      if (!phoneNo.match(phoneRegex)) {\n        setPhoneError(\"Please ensure 10 digit number!\");\n      } else {\n        setPhoneError(\"\");\n      }\n\n      if (area == \"\") {\n        setAreaError(\"Empty area!\");\n      } else {\n        setAreaError(\"\");\n      }\n      if (city == \"\") {\n        setCityError(\"Empty city!\");\n      } else {\n        setCityError(\"\");\n      }\n      if (state1 == \"\") {\n        setState1Error(\"Empty state!\");\n      } else {\n        setState1Error(\"\");\n      }\n      if (country == \"\") {\n        setCountryError(\"Empty country!\");\n      } else {\n        setCountryError(\"\");\n      }\n\n      let pincodeRegex = \"^[0-9]{6}$\";\n      if (!pincode.match(pincodeRegex)) {\n        setPincodeError(\"Please ensure 6 digit pincode!\");\n      } else {\n        setPincodeError(\"\");\n      }\n    } else {\n      setFirstNameError(\"\");\n      setLastNameError(\"\");\n      setPwdError(\"\");\n      setConfirmPwdError(\"\");\n      setAreaError(\"\");\n      setPhoneError(\"\");\n      setCityError(\"\");\n      setState1Error(\"\");\n      setCountryError(\"\");\n      setPincodeError(\"\");\n      setEmailError(\"\");\n\n      let newUser = {\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          gender: gender,\n          dateOfBirth: new Date(dob).toLocaleDateString(),\n        },\n        credentials: {\n          email: email,\n          phoneNumber: parseInt(phoneNo + \"l\"),\n          pwd: pwd,\n        },\n        address: {\n          area: area,\n          city: city,\n          state: state1,\n          country: country,\n          pinCode: parseInt(pincode + \"l\"),\n        },\n      };\n\n      axios\n        .post(`${Base_URL}/register`, newUser)\n        .then((response) => {\n          if (typeof response.data == typeof \"\") {\n            if (response.data.includes(\"Email and Phone\")) {\n              setEmailError(\"Email already exists!\");\n              setPhoneError(\"Phone Number already exists!\");\n            } else {\n              setEmailError(\"\");\n              setPhoneError(\"\");\n\n              response.data == \"Email already exists!\"\n                ? setEmailError(\"Email already exists!\")\n                : setEmailError(\"\");\n\n              response.data == \"Phone Number already exists!\"\n                ? setPhoneError(\"Phone Number already exists!\")\n                : setPhoneError(\"\");\n            }\n          }\n          if (typeof response.data == typeof {}) {\n            setIsRegistrationSuccess(true);\n            setTimeout(() => {\n              setIsRegistrationSuccess(false);\n            }, 10000);\n            notifyRegistrationSuccess();\n            clearRegistrationForm(e);\n          } else {\n            setIsRegistrationSuccess(false);\n            notifyLoginFailed();\n          }\n          setUserDetails(response.data);\n        })\n        .catch((error) => {\n          setIsRegistrationSuccess(false);\n          notifyRegistrationFailed();\n        });\n    }\n  };\n\n  const [productsLoadMsg, setProductsLoadMsg] = useState(\"\");\n\n  const handleLogin = () => {\n    if (sessionStorage.getItem(\"pwd\") != null) {\n      let uname =\n        sessionStorage.getItem(\"email\") == \"\"\n          ? sessionStorage.getItem(\"phone\")\n          : sessionStorage.getItem(\"email\");\n      if (uname != \"\") {\n        let upwd = sessionStorage.getItem(\"pwd\");\n        axios\n          .post(`${Base_URL}/login`, {\n            username: uname,\n            password: upwd,\n          })\n          .then((response) => {\n            if (response.status == 200) {\n              setLoginFailedMsg(\"Login successful, please close this pop-up\");\n              setIsAuthenticated(true);\n              setUserDetails(response.data);\n              redirect(\"/\");\n            }\n          })\n          .catch((error) => {\n            if (error.message.includes(\"401\")) {\n              setLoginFailedMsg(\"Incorrect username or password !\");\n            } else {\n              setLoginFailedMsg(\"Network error !\");\n            }\n            setIsAuthenticated(false);\n          });\n      }\n    } else {\n      setIsAuthenticated(false);\n    }\n  };\n\n  const [healthStatus, setHealthStatus] = useState();\n\n  const getApplicationHealth = () => {\n    axios\n      .get(`${Base_URL}/actuator/health`)\n      .then((response) => {\n        setHealthStatus(response.data.status);\n        console.log(\"health:\", response.data.status);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const getProducts = () => {\n    axios\n      .get(`${Base_URL}/products`)\n      .then((response) => {\n        setProducts(response.data);\n        if (response.data.length === 0) {\n          setProductsLoadMsg(\"Products not available!\");\n        }\n      })\n      .catch((error) => {\n        setProductsLoadMsg(`Server Error ! : ${error.message}`);\n      });\n  };\n  useEffect(() => {\n    handleLogin();\n    getCartItems(setCartItems);\n    getProducts();\n    getApplicationHealth();\n  }, []);\n\n  return (\n    <Router>\n      {products && products.length > 0 ? (\n        <div className=\"\">\n          <ToastContainer />\n          <div className=\"\">\n            <Navigation\n              isAuthenticated={isAuthenticated}\n              searchProduct={searchProduct}\n              onSearchChange={onSearchChange}\n              handleSearch={handleSearch}\n              userDetail={userDetail}\n              cartItems={cartItems}\n              handleLogout={handleLogout}\n            />\n            <div className=\"bg-light\">sdsddddddd</div>\n            <div className=\"bg-light\">sdsddddddd</div>\n            <div className=\"bg-light\">sdsddddddd</div>\n            <div className=\"bg-light\">sdsddddddd</div>\n          </div>\n\n          {isAuthenticated && userDetail.user.role === \"ADMIN\" && (\n            <div\n              className={`text-center mt-2 ${\n                healthStatus === \"UP\" ? \"text-success\" : \"text-danger\"\n              }`}\n            >\n              Application Health Status : {healthStatus}\n            </div>\n          )}\n\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <ProductCards\n                  products={filteredProducts}\n                  searchInput={searchProduct}\n                  userDetail={userDetail}\n                  setCartItems={setCartItems}\n                  isAuthenticated={isAuthenticated}\n                  pathName={pathName}\n                  searchProduct={searchProduct}\n                  onSearchChange={onSearchChange}\n                />\n              }\n            />\n            <Route\n              path=\"/profile\"\n              element={\n                isAuthenticated ? (\n                  <Profile userDetail={userDetail} handleLogin={handleLogin} />\n                ) : (\n                  <Navigate to=\"/\" />\n                )\n              }\n            />\n            <Route\n              path=\"/*\"\n              element={\n                <ErrorPage\n                  filteredProducts={filteredProducts}\n                  msg={productsLoadMsg}\n                />\n              }\n            />\n            <Route\n              path=\"/about-us\"\n              element={<AboutUs msg={productsLoadMsg} />}\n            />\n            <Route\n              path=\"/cart\"\n              element={\n                !isAuthenticated ? (\n                  <Navigate to=\"/\" />\n                ) : (\n                  <Cart\n                    isAuthenticated={isAuthenticated}\n                    userDetails={userDetail}\n                    setCartItems1={setCartItems}\n                    handleLogin={handleLogin}\n                  />\n                )\n              }\n            />\n            <Route path=\"/order-confirmation\" element={<OrderConfirmation />} />\n            <Route\n              path=\"/login\"\n              element={\n                isAuthenticated ? (\n                  <Navigate to=\"/\" />\n                ) : (\n                  <Login\n                    hangleLogin={hangleLogin}\n                    loginEmailOrPhoneError={loginEmailOrPhoneError}\n                    loginEmailOrPhone={loginEmailOrPhone}\n                    setLoginEmailOrPhonesetEmail={setLoginEmailOrPhonesetEmail}\n                    loginPwdError={loginPwdError}\n                    showLoginPwd={showLoginPwd}\n                    loginPwd={loginPwd}\n                    setLoginPwd={setLoginPwd}\n                    setShowLoginPwd={setShowLoginPwd}\n                    isAuthenticated={isAuthenticated}\n                    loginFailedMsg={loginFailedMsg}\n                    resetLoginForm={resetLoginForm}\n                  />\n                )\n              }\n            />\n            <Route\n              path=\"/register\"\n              element={\n                <Register\n                  handleRegister={handleRegister}\n                  gender={gender}\n                  setGender={setGender}\n                  firstNameError={firstNameError}\n                  firstName={firstName}\n                  setFirstName={setFirstName}\n                  lastNameError={lastNameError}\n                  lastName={lastName}\n                  setLastName={setLastName}\n                  dob={dob}\n                  setDob={setDob}\n                  emailError={emailError}\n                  email={email}\n                  setEmail={setEmail}\n                  phoneError={phoneError}\n                  phoneNo={phoneNo}\n                  setPhoneNo={setPhoneNo}\n                  pwdError={pwdError}\n                  pwd={pwd}\n                  setPwd={setPwd}\n                  confirmPwdError={confirmPwdError}\n                  pwdMissMatch={pwdMissMatch}\n                  confirmPwd={confirmPwd}\n                  setConfirmPwd={setConfirmPwd}\n                  areaError={areaError}\n                  area={area}\n                  setArea={setArea}\n                  cityError={cityError}\n                  city={city}\n                  setCity={setCity}\n                  state1Error={state1Error}\n                  state1={state1}\n                  setState1={setState1}\n                  countryError={countryError}\n                  country={country}\n                  setCountry={setCountry}\n                  pincodeError={pincodeError}\n                  pincode={pincode}\n                  setPincode={setPincode}\n                  isRegistrationSuccess={isRegistrationSuccess}\n                  clearRegistrationForm={clearRegistrationForm}\n                  dobError={dobError}\n                />\n              }\n            />\n            <Route\n              path=\"/orders\"\n              element={\n                !isAuthenticated ? (\n                  <Navigate to=\"/\" />\n                ) : (\n                  <MyOrders userId={sessionStorage.getItem(\"user_id\")} />\n                )\n              }\n            />\n          </Routes>\n          <Footer />\n        </div>\n      ) : (\n        <ErrorPage />\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}